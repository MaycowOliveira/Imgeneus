@page "/Users"
@attribute [Authorize(Roles = "SuperAdmin, Admin")]
@using Imgeneus.Database.Entities
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore

@inject IDatabase _database
@inject UserManager<DbUser> _userManger

<PageTitle>Users</PageTitle>

@if (_users == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Points</th>
                <th>Faction</th>
                <th>Role</th>
                <th>Last connection time</th>
                <th>Is deleted</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in _users)
            {
                <tr>
                    <td>@user.UserName</td>
                    <td>@user.Points</td>
                    <td>@user.Faction</td>
                    <td>
                        @foreach (var role in @user.Roles)
                        {
                            <span class="badge @(StyleForRole(@role))">@role</span>
                        }
                    </td>
                    <td>@user.LastConnectionTime.ToLongDateString() @user.LastConnectionTime.ToLongTimeString()</td>
                    <td>@user.IsDeleted</td>
                    <td>// TODO: make GM and non-GM</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private UserDTO[] _users;

    protected override async Task OnInitializedAsync()
    {
        var dbUsers = await _database.Users.ToArrayAsync();
        var users = new UserDTO[dbUsers.Length];

        for (var i = 0; i < dbUsers.Length; i++)
        {
            users[i] = new UserDTO(dbUsers[i], await _userManger.GetRolesAsync(dbUsers[i]));
        }

        _users = users;
    }

    private string StyleForRole(string role)
    {
        switch (role)
        {
            case DbRole.SUPER_ADMIN:
                return "bg-danger";

            case DbRole.ADMIN:
                return "bg-primary";

            default:
                return "bg-secondary";
        }
    }
}
